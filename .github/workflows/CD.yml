name: Souso - CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Souso - CD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: check gradle
        run: ./gradlew check

      - name: Login to Dockerhub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/souso:latest
          build-args: |
            JDBC_URL=${{ secrets.JDBC_URL }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PWD=${{ secrets.DB_PWD }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            COOLSMS_API_KEY=${{ secrets.COOLSMS_API_KEY }}
            COOLSMS_SECRET_KEY=${{ secrets.COOLSMS_SECRET_KEY }}
            COOLSMS_PHONE_NUMBER=${{ secrets.COOLSMS_PHONE_NUMBER }}
            AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
            S3_BUCKET=${{ secrets.S3_BUCKET }}
            AWS_REGION=${{ secrets.AWS_REGION }}

      - name: Connect EC2 & Souso Docker Image Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          port: ${{ secrets.EC2_PORT }}
          username: ${{ secrets.EC2_USER }}
          passphrase: ${{ secrets.EC2_PEM_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_IMAGE }}
            docker rm -f ${{ secrets.DOCKER_IMAGE }} || true
            docker run -d --name souso -p ${{ secrets.APPLICATION_PORT }}:8080 ${{ secrets.DOCKER_IMAGE }}
